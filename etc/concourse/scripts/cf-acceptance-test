#!/bin/bash

set -e -x

SCRIPT_DIR="${BASH_SOURCE%/*}"
source $SCRIPT_DIR/common-functions

echo "Environment:"
env | sort

# Download CF CLI
mkdir -p bin/.cf
(cd bin/.cf && curl -L "https://cli.run.pivotal.io/stable?release=linux64-binary&source=github" | tar -zx)
export PATH=$PATH:$(pwd)/bin/.cf

echo "Logging to CF ..."

if [ "$SKIP_SSL_VALIDATION" == "true" ]; then
  skip='--skip-ssl-validation'
  insecure='--insecure'
fi

cf api https://api.${CF_SYS_DOMAIN} $skip
cf login -u ${CF_USER} -p ${CF_PASSWORD} -o ${CF_ORG} -s ${CF_SPACE}

# Find params to speed-up bridge processing
export ORG_GUID=$(cf org ${CF_ORG} --guid)
echo "Org GUID: $ORG_GUID"

TOKEN=$(curl $insecure --user ${BRIDGE_CLIENT_ID}:${BRIDGE_CLIENT_SECRET} -s "https://uaa.$CF_SYS_DOMAIN/oauth/token?grant_type=client_credentials" | jq -r .access_token)
if [ "$TOKEN" == "null" -o -z "$TOKEN" ]; then
  echo "Cannot obtain token for access to CF API !"
  exit 1
fi
EVENTS_URL="https://api.$CF_SYS_DOMAIN/v2/app_usage_events"
NUM_EVENTS=$(curl -s $insecure -H "Authorization: bearer $TOKEN" -H "Content-Type: application/json" "$EVENTS_URL?results-per-page=1" | jq '.total_results')
export LAST_RECORDED_GUID=$(curl -s $insecure -H "Authorization: bearer $TOKEN" -H "Content-Type: application/json" "$EVENTS_URL?results-per-page=1&page=$NUM_EVENTS" | jq -r '.resources[0].metadata.guid')
echo "Last recorded GUID: $LAST_RECORDED_GUID"

echo "Replacing ORG_GUID and LAST_RECORDED_GUID in bridge manifest ..."
abacus_config_dir=${ABACUS_CONFIG_DIR}
abacus_dir=${ABACUS_PROJECT_DIR}
$abacus_dir/etc/concourse/scripts/configure $abacus_config_dir
cp -R $abacus_config_dir/* $abacus_dir

pushd $abacus_dir
  echo "Building Abacus ..."
  npm run provision

  echo "Deleting all apps in $CF_ORG/$CF_SPACE ..."
  getApps
  echo ${APPS[@]} | xargs -n1 | xargs -P 5 -i cf delete -f -r {}

  echo "Deploying Abacus ..."
  npm run cfstage -- default

  set +e
  echo "Start all apps ..."
  (JOBS=6 npm run cfstart -- default)

  echo "Restarting failed apps ..."
  restartAppsWithRetry

  echo "Starting Acceptance test ..."
  npm run acceptance -- --reporting-app=${REPORTING_APP} \
  --cf-domain=${CF_DOMAIN} \
  --organization-guid=$ORG_GUID \
  --total-timeout=${CI_PIPELINE_TIMEOUT} \
  --start-timeout=${CI_START_TIMEOUT}

popd
